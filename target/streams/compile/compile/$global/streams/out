[0m[[0m[31merror[0m] [0m[0m/Users/benparker/development/scala/blackjack/src/main/scala/com/needstyping/blackjack/Card.scala:11:13: case object King has case ancestor com.needstyping.blackjack.Value, but case-to-case inheritance is prohibited. To overcome this limitation, use extractors to pattern match on non-leaf nodes.[0m
[0m[[0m[31merror[0m] [0m[0mcase object King extends Value(10)[0m
[0m[[0m[31merror[0m] [0m[0m            ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/benparker/development/scala/blackjack/src/main/scala/com/needstyping/blackjack/Card.scala:12:13: case object Queen has case ancestor com.needstyping.blackjack.Value, but case-to-case inheritance is prohibited. To overcome this limitation, use extractors to pattern match on non-leaf nodes.[0m
[0m[[0m[31merror[0m] [0m[0mcase object Queen extends Value(10)[0m
[0m[[0m[31merror[0m] [0m[0m            ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/benparker/development/scala/blackjack/src/main/scala/com/needstyping/blackjack/Card.scala:13:13: case object Jack has case ancestor com.needstyping.blackjack.Value, but case-to-case inheritance is prohibited. To overcome this limitation, use extractors to pattern match on non-leaf nodes.[0m
[0m[[0m[31merror[0m] [0m[0mcase object Jack extends Value(10)[0m
[0m[[0m[31merror[0m] [0m[0m            ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/benparker/development/scala/blackjack/src/main/scala/com/needstyping/blackjack/Card.scala:14:13: case object Ten has case ancestor com.needstyping.blackjack.Value, but case-to-case inheritance is prohibited. To overcome this limitation, use extractors to pattern match on non-leaf nodes.[0m
[0m[[0m[31merror[0m] [0m[0mcase object Ten extends Value(10)[0m
[0m[[0m[31merror[0m] [0m[0m            ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/benparker/development/scala/blackjack/src/main/scala/com/needstyping/blackjack/Card.scala:15:13: case object Nine has case ancestor com.needstyping.blackjack.Value, but case-to-case inheritance is prohibited. To overcome this limitation, use extractors to pattern match on non-leaf nodes.[0m
[0m[[0m[31merror[0m] [0m[0mcase object Nine extends Value(9)[0m
[0m[[0m[31merror[0m] [0m[0m            ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/benparker/development/scala/blackjack/src/main/scala/com/needstyping/blackjack/Card.scala:16:13: case object Eight has case ancestor com.needstyping.blackjack.Value, but case-to-case inheritance is prohibited. To overcome this limitation, use extractors to pattern match on non-leaf nodes.[0m
[0m[[0m[31merror[0m] [0m[0mcase object Eight extends Value(8)[0m
[0m[[0m[31merror[0m] [0m[0m            ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/benparker/development/scala/blackjack/src/main/scala/com/needstyping/blackjack/Card.scala:17:13: case object Seven has case ancestor com.needstyping.blackjack.Value, but case-to-case inheritance is prohibited. To overcome this limitation, use extractors to pattern match on non-leaf nodes.[0m
[0m[[0m[31merror[0m] [0m[0mcase object Seven extends Value(7)[0m
[0m[[0m[31merror[0m] [0m[0m            ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/benparker/development/scala/blackjack/src/main/scala/com/needstyping/blackjack/Card.scala:18:13: case object Six has case ancestor com.needstyping.blackjack.Value, but case-to-case inheritance is prohibited. To overcome this limitation, use extractors to pattern match on non-leaf nodes.[0m
[0m[[0m[31merror[0m] [0m[0mcase object Six extends Value(6)[0m
[0m[[0m[31merror[0m] [0m[0m            ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/benparker/development/scala/blackjack/src/main/scala/com/needstyping/blackjack/Card.scala:19:13: case object Five has case ancestor com.needstyping.blackjack.Value, but case-to-case inheritance is prohibited. To overcome this limitation, use extractors to pattern match on non-leaf nodes.[0m
[0m[[0m[31merror[0m] [0m[0mcase object Five extends Value(5)[0m
[0m[[0m[31merror[0m] [0m[0m            ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/benparker/development/scala/blackjack/src/main/scala/com/needstyping/blackjack/Card.scala:20:13: case object Four has case ancestor com.needstyping.blackjack.Value, but case-to-case inheritance is prohibited. To overcome this limitation, use extractors to pattern match on non-leaf nodes.[0m
[0m[[0m[31merror[0m] [0m[0mcase object Four extends Value(4)[0m
[0m[[0m[31merror[0m] [0m[0m            ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/benparker/development/scala/blackjack/src/main/scala/com/needstyping/blackjack/Card.scala:21:13: case object Three has case ancestor com.needstyping.blackjack.Value, but case-to-case inheritance is prohibited. To overcome this limitation, use extractors to pattern match on non-leaf nodes.[0m
[0m[[0m[31merror[0m] [0m[0mcase object Three extends Value(3)[0m
[0m[[0m[31merror[0m] [0m[0m            ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/benparker/development/scala/blackjack/src/main/scala/com/needstyping/blackjack/Card.scala:22:13: case object Two has case ancestor com.needstyping.blackjack.Value, but case-to-case inheritance is prohibited. To overcome this limitation, use extractors to pattern match on non-leaf nodes.[0m
[0m[[0m[31merror[0m] [0m[0mcase object Two extends Value(2)[0m
[0m[[0m[31merror[0m] [0m[0m            ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/benparker/development/scala/blackjack/src/main/scala/com/needstyping/blackjack/Card.scala:23:13: case object Ace has case ancestor com.needstyping.blackjack.Value, but case-to-case inheritance is prohibited. To overcome this limitation, use extractors to pattern match on non-leaf nodes.[0m
[0m[[0m[31merror[0m] [0m[0mcase object Ace extends Value(1)[0m
[0m[[0m[31merror[0m] [0m[0m            ^[0m
[0m[[0m[31merror[0m] [0m[0m13 errors found[0m
