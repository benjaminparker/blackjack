[0m[[0m[33mwarn[0m] [0m[0m/Users/benparker/development/scala/blackjack/src/test/scala/com/needstyping/blackjack/BlackjackGameSpec.scala:12:51: non-variable type argument com.needstyping.blackjack.Card in type pattern List[com.needstyping.blackjack.Card] (the underlying of List[com.needstyping.blackjack.Card]) is unchecked since it is eliminated by erasure[0m
[0m[[0m[33mwarn[0m] [0m[0m      game.bet(10) should matchPattern { case (d: List[Card], p: List[Card], b) => {[0m
[0m[[0m[33mwarn[0m] [0m[0m                                                  ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/Users/benparker/development/scala/blackjack/src/test/scala/com/needstyping/blackjack/BlackjackGameSpec.scala:12:66: non-variable type argument com.needstyping.blackjack.Card in type pattern List[com.needstyping.blackjack.Card] (the underlying of List[com.needstyping.blackjack.Card]) is unchecked since it is eliminated by erasure[0m
[0m[[0m[33mwarn[0m] [0m[0m      game.bet(10) should matchPattern { case (d: List[Card], p: List[Card], b) => {[0m
[0m[[0m[33mwarn[0m] [0m[0m                                                                 ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/benparker/development/scala/blackjack/src/test/scala/com/needstyping/blackjack/BlackjackGameSpec.scala:12:84: No code is allowed to the right of rocket symbols (=>) in a partial function passed to matchPattern, because matchPattern is intended only for ensuring that an expression matches a pattern. If you want to make further assertions after a successful pattern match, use org.scalatest.Inside instead.[0m
[0m[[0m[31merror[0m] [0m[0m      game.bet(10) should matchPattern { case (d: List[Card], p: List[Card], b) => {[0m
[0m[[0m[31merror[0m] [0m[0m                                                                                   ^[0m
[0m[[0m[33mwarn[0m] [0m[0mtwo warnings found[0m
[0m[[0m[31merror[0m] [0m[0mone error found[0m
